#include <Eigen/Dense>
//#include "mex.h"

#define MAX_DEG  54
#include "solvers/sturm.h"
#include "solvers/charpoly.h"

using namespace Eigen;

void fast_eigenvector_solver(double * eigv, int neig, Eigen::Matrix<double,54,54> &AM, Matrix<std::complex<double>,3,54> &sols);



MatrixXcd solver_1vp_222cl(const VectorXd& data)
{
	// Compute coefficients
    const double* d = data.data();
    VectorXd coeffs(90);
    coeffs[0] = -std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[21],2) - d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[21],2) + d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[22] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[22] + d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23];
    coeffs[1] = std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[21],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[21],2) - d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[21],2) + d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) - std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[22] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[22] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*d[21]*d[22] + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*d[21]*d[22] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[22],2) + 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*d[21]*d[23] - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*d[21]*d[23] + d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[22]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23];
    coeffs[2] = std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[22] + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[22] - 2*d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*d[21]*d[22] + 2*d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] - std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[22],2) + std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[22],2) - d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[22],2) + d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) + d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] + 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*d[22]*d[23] - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*d[22]*d[23];
    coeffs[3] = std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[22] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[22] - std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[22],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[22],2) - d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[22],2) + d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[22],2) + d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[22]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[22]*d[23];
    coeffs[4] = 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) - 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[21],2) - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[23];
    coeffs[5] = 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*std::pow(d[21],2) - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*std::pow(d[21],2) + 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) - 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[21],2) - 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[22] + 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[22] + 4*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*d[21]*d[22] - 4*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[21]*d[22] - 4*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*d[21]*d[23] + 4*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[21]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[22]*d[23];
    coeffs[6] = 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) + 4*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] - 4*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[22] - 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) + 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) + 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) - 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[22],2) - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[23] - 4*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*d[22]*d[23] + 4*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[22]*d[23];
    coeffs[7] = 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[22] - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[22] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*std::pow(d[22],2) + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*std::pow(d[22],2) + 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*std::pow(d[22],2) - 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[22],2) - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[22]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[22]*d[23];
    coeffs[8] = std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[21],2) - d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) + d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*d[21]*d[22] - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[21]*d[22] - std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[23] - 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[21]*d[23] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*d[22]*d[23] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[22]*d[23] + d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) - d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2);
    coeffs[9] = 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) - 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[21],2) - 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[22] + 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*std::pow(d[22],2) - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[22],2) - 2*std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[22]*d[23] + 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*std::pow(d[23],2) - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2);
    coeffs[10] = 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] - 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[22] - std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[22],2) + std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[22],2) - d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) + d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) + std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*d[22]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[22]*d[23] - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[22]*d[23] + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[22]*d[23] + d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[23],2) - d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[23],2);
    coeffs[11] = -std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[21],2) + d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[21],2) - d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[22] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[22] - d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23];
    coeffs[12] = -std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[21],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[21],2) + d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[21],2) - d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) + std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[22] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[22] + 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*d[21]*d[22] - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*d[21]*d[22] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[22],2) - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*d[21]*d[23] + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*d[21]*d[23] - d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[22]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23];
    coeffs[13] = -std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[21],2) + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[22] + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[22] + 2*d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*d[21]*d[22] - 2*d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] + std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[22],2) - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[22],2) + std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[22],2) + d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[22],2) - d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) - d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*d[22]*d[23] + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*d[22]*d[23];
    coeffs[14] = -std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[22] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[22] + std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[22],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[22],2) + d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[22],2) - d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[22],2) - d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[22]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[22]*d[23];
    coeffs[15] = 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[21],2) - 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) + 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) - 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[21],2) - 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[21]*d[23] + 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[23],2);
    coeffs[16] = 4*d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[21],2) - 4*d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) + 4*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] - 4*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[22] - 4*d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*d[22]*d[23] + 4*d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23] - 4*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2) + 4*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[23],2);
    coeffs[17] = 4*d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*d[21]*d[22] - 4*d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[22],2) + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) + 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) - 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[22],2) + 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[23] - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] - 4*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*d[22]*d[23] + 4*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*d[22]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[23],2) + 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[23],2);
    coeffs[18] = std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[21],2) + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[22] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[22] - 2*std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[23] - d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*d[22]*d[23] - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[22]*d[23] - std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[23],2) + d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[23],2) - d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2);
    coeffs[19] = std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[22] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[22],2) + 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*d[21]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[23] - 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*d[22]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[22]*d[23] - d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[22]*d[23] + d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[22]*d[23] - std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[23],2) + d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[23],2) - d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[23],2);
    coeffs[20] = -std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[21],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[21],2) - std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[21],2) + d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[21],2) + d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) - d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*d[21]*d[22] - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[21]*d[22] + std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[21]*d[23] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[21]*d[23] - 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[21]*d[23] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[18],2)*d[22]*d[23] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[22]*d[23] - d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) + d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2);
    coeffs[21] = -2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*std::pow(d[21],2) + 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[21],2) + 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[22] - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*std::pow(d[22],2) - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[22],2) - 2*std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[23] + 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*d[22]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*d[22]*d[23] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*std::pow(d[23],2) + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2);
    coeffs[22] = -2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*d[21]*d[22] + 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[22] + std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[22],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[22],2) + std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[22],2) + d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) - d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) - std::pow(d[2],2)*d[4]*d[5]*std::pow(d[19],2)*d[21]*d[23] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[21]*d[23] + 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*d[22]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*d[22]*d[23] - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*d[22]*d[23] + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*d[22]*d[23] - d[1]*d[2]*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[23],2) + d[0]*d[2]*d[4]*d[5]*std::pow(d[19],2)*std::pow(d[23],2);
    coeffs[23] = 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) + 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[23] - 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) + 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) - 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2) + 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[23],2);
    coeffs[24] = 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[22] - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] + 4*d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*d[21]*d[23] - 4*d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*d[21]*d[23] - 4*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*d[22]*d[23] + 4*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*d[22]*d[23] + 2*std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[22]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[22]*d[23] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[19]*std::pow(d[23],2) + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2) - 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*std::pow(d[23],2) + 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[23],2);
    coeffs[25] = std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[23] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*d[22]*d[23] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[22]*d[23] - std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2) + d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[23],2);
    coeffs[26] = -std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*std::pow(d[21],2) + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[21],2) + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[22] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[22] - 2*std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*d[21]*d[23] + 2*d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[23] + d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] + 2*std::pow(d[2],2)*d[3]*d[5]*d[18]*d[20]*d[22]*d[23] - 2*d[0]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[22]*d[23] + std::pow(d[2],2)*d[4]*d[5]*std::pow(d[18],2)*std::pow(d[23],2) - d[1]*d[2]*std::pow(d[5],2)*std::pow(d[18],2)*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*d[18]*d[19]*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[23],2) - d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[23],2) + d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2);
    coeffs[27] = -std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[22] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[22] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*std::pow(d[22],2) - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*std::pow(d[22],2) - 2*std::pow(d[2],2)*d[4]*d[5]*d[19]*d[20]*d[21]*d[23] + 2*d[1]*d[2]*std::pow(d[5],2)*d[19]*d[20]*d[21]*d[23] + 2*std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*d[22]*d[23] - 2*d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*d[22]*d[23] + d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[22]*d[23] - d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[22]*d[23] + std::pow(d[2],2)*d[4]*d[5]*d[18]*d[19]*std::pow(d[23],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[19]*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*std::pow(d[19],2)*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*std::pow(d[19],2)*std::pow(d[23],2) - d[1]*d[2]*d[3]*d[5]*d[19]*d[20]*std::pow(d[23],2) + d[0]*d[2]*d[4]*d[5]*d[19]*d[20]*std::pow(d[23],2);
    coeffs[28] = 2*d[1]*d[2]*d[3]*d[5]*std::pow(d[20],2)*d[21]*d[23] - 2*d[0]*d[2]*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] - 2*d[1]*d[2]*d[3]*d[5]*d[18]*d[20]*std::pow(d[23],2) + 2*d[0]*d[2]*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2);
    coeffs[29] = -std::pow(d[2],2)*d[4]*d[5]*std::pow(d[20],2)*d[21]*d[23] + d[1]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[21]*d[23] + std::pow(d[2],2)*d[3]*d[5]*std::pow(d[20],2)*d[22]*d[23] - d[0]*d[2]*std::pow(d[5],2)*std::pow(d[20],2)*d[22]*d[23] + std::pow(d[2],2)*d[4]*d[5]*d[18]*d[20]*std::pow(d[23],2) - d[1]*d[2]*std::pow(d[5],2)*d[18]*d[20]*std::pow(d[23],2) - std::pow(d[2],2)*d[3]*d[5]*d[19]*d[20]*std::pow(d[23],2) + d[0]*d[2]*std::pow(d[5],2)*d[19]*d[20]*std::pow(d[23],2);
    coeffs[30] = -std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[27],2) - d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[27],2) + d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[28] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[28] + d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29];
    coeffs[31] = std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[27],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[27],2) - d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[27],2) + d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) - std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[28] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[28] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*d[27]*d[28] + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*d[27]*d[28] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[28],2) + 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*d[27]*d[29] - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*d[27]*d[29] + d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[28]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29];
    coeffs[32] = std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[28] + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[28] - 2*d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*d[27]*d[28] + 2*d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] - std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[28],2) + std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[28],2) - d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[28],2) + d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) + d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] + 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*d[28]*d[29] - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*d[28]*d[29];
    coeffs[33] = std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[28] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[28] - std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[28],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[28],2) - d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[28],2) + d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[28],2) + d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[28]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[28]*d[29];
    coeffs[34] = 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) - 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[27],2) - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[29];
    coeffs[35] = 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*std::pow(d[27],2) - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*std::pow(d[27],2) + 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) - 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[27],2) - 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[28] + 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[28] + 4*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*d[27]*d[28] - 4*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[27]*d[28] - 4*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*d[27]*d[29] + 4*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[27]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[28]*d[29];
    coeffs[36] = 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) + 4*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] - 4*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[28] - 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) + 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) + 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) - 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[28],2) - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[29] - 4*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*d[28]*d[29] + 4*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[28]*d[29];
    coeffs[37] = 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[28] - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[28] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*std::pow(d[28],2) + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*std::pow(d[28],2) + 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*std::pow(d[28],2) - 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[28],2) - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[28]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[28]*d[29];
    coeffs[38] = std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[27],2) - d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) + d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*d[27]*d[28] - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[27]*d[28] - std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[29] - 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[27]*d[29] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*d[28]*d[29] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[28]*d[29] + d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) - d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2);
    coeffs[39] = 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) - 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[27],2) - 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[28] + 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*std::pow(d[28],2) - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[28],2) - 2*std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[28]*d[29] + 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*std::pow(d[29],2) - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2);
    coeffs[40] = 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] - 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[28] - std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[28],2) + std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[28],2) - d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) + d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) + std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*d[28]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[28]*d[29] - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[28]*d[29] + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[28]*d[29] + d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[29],2) - d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[29],2);
    coeffs[41] = -std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[27],2) + d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[27],2) - d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[28] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[28] - d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29];
    coeffs[42] = -std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[27],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[27],2) + d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[27],2) - d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) + std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[28] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[28] + 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*d[27]*d[28] - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*d[27]*d[28] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[28],2) - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*d[27]*d[29] + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*d[27]*d[29] - d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[28]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29];
    coeffs[43] = -std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[27],2) + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[28] + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[28] + 2*d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*d[27]*d[28] - 2*d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] + std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[28],2) - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[28],2) + std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[28],2) + d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[28],2) - d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) - d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*d[28]*d[29] + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*d[28]*d[29];
    coeffs[44] = -std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[28] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[28] + std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[28],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[28],2) + d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[28],2) - d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[28],2) - d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[28]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[28]*d[29];
    coeffs[45] = 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[27],2) - 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) + 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) - 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[27],2) - 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[27]*d[29] + 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[29],2);
    coeffs[46] = 4*d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[27],2) - 4*d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) + 4*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] - 4*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[28] - 4*d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*d[28]*d[29] + 4*d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29] - 4*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2) + 4*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[29],2);
    coeffs[47] = 4*d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*d[27]*d[28] - 4*d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[28],2) + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) + 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) - 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[28],2) + 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[29] - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] - 4*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*d[28]*d[29] + 4*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*d[28]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[29],2) + 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[29],2);
    coeffs[48] = std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[27],2) + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[28] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[28] - 2*std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[29] - d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*d[28]*d[29] - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[28]*d[29] - std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[29],2) + d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[29],2) - d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2);
    coeffs[49] = std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[28] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[28],2) + 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*d[27]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[29] - 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*d[28]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[28]*d[29] - d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[28]*d[29] + d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[28]*d[29] - std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[29],2) + d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[29],2) - d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[29],2);
    coeffs[50] = -std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[27],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[27],2) - std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[27],2) + d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[27],2) + d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) - d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*d[27]*d[28] - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[27]*d[28] + std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[27]*d[29] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[27]*d[29] - 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[27]*d[29] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[24],2)*d[28]*d[29] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[28]*d[29] - d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) + d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2);
    coeffs[51] = -2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*std::pow(d[27],2) + 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[27],2) + 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[28] - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*std::pow(d[28],2) - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[28],2) - 2*std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[29] + 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*d[28]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*d[28]*d[29] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*std::pow(d[29],2) + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2);
    coeffs[52] = -2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*d[27]*d[28] + 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[28] + std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[28],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[28],2) + std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[28],2) + d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) - d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) - std::pow(d[8],2)*d[10]*d[11]*std::pow(d[25],2)*d[27]*d[29] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[27]*d[29] + 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*d[28]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*d[28]*d[29] - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*d[28]*d[29] + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*d[28]*d[29] - d[7]*d[8]*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[29],2) + d[6]*d[8]*d[10]*d[11]*std::pow(d[25],2)*std::pow(d[29],2);
    coeffs[53] = 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) + 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[29] - 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) + 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) - 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2) + 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[29],2);
    coeffs[54] = 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[28] - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] + 4*d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*d[27]*d[29] - 4*d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*d[27]*d[29] - 4*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*d[28]*d[29] + 4*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*d[28]*d[29] + 2*std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[28]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[28]*d[29] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[25]*std::pow(d[29],2) + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2) - 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*std::pow(d[29],2) + 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[29],2);
    coeffs[55] = std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[29] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*d[28]*d[29] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[28]*d[29] - std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2) + d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[29],2);
    coeffs[56] = -std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*std::pow(d[27],2) + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[27],2) + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[28] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[28] - 2*std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*d[27]*d[29] + 2*d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[29] + d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] + 2*std::pow(d[8],2)*d[9]*d[11]*d[24]*d[26]*d[28]*d[29] - 2*d[6]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[28]*d[29] + std::pow(d[8],2)*d[10]*d[11]*std::pow(d[24],2)*std::pow(d[29],2) - d[7]*d[8]*std::pow(d[11],2)*std::pow(d[24],2)*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*d[24]*d[25]*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[29],2) - d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[29],2) + d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2);
    coeffs[57] = -std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[28] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[28] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*std::pow(d[28],2) - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*std::pow(d[28],2) - 2*std::pow(d[8],2)*d[10]*d[11]*d[25]*d[26]*d[27]*d[29] + 2*d[7]*d[8]*std::pow(d[11],2)*d[25]*d[26]*d[27]*d[29] + 2*std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*d[28]*d[29] - 2*d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*d[28]*d[29] + d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[28]*d[29] - d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[28]*d[29] + std::pow(d[8],2)*d[10]*d[11]*d[24]*d[25]*std::pow(d[29],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[25]*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*std::pow(d[25],2)*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*std::pow(d[25],2)*std::pow(d[29],2) - d[7]*d[8]*d[9]*d[11]*d[25]*d[26]*std::pow(d[29],2) + d[6]*d[8]*d[10]*d[11]*d[25]*d[26]*std::pow(d[29],2);
    coeffs[58] = 2*d[7]*d[8]*d[9]*d[11]*std::pow(d[26],2)*d[27]*d[29] - 2*d[6]*d[8]*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] - 2*d[7]*d[8]*d[9]*d[11]*d[24]*d[26]*std::pow(d[29],2) + 2*d[6]*d[8]*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2);
    coeffs[59] = -std::pow(d[8],2)*d[10]*d[11]*std::pow(d[26],2)*d[27]*d[29] + d[7]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[27]*d[29] + std::pow(d[8],2)*d[9]*d[11]*std::pow(d[26],2)*d[28]*d[29] - d[6]*d[8]*std::pow(d[11],2)*std::pow(d[26],2)*d[28]*d[29] + std::pow(d[8],2)*d[10]*d[11]*d[24]*d[26]*std::pow(d[29],2) - d[7]*d[8]*std::pow(d[11],2)*d[24]*d[26]*std::pow(d[29],2) - std::pow(d[8],2)*d[9]*d[11]*d[25]*d[26]*std::pow(d[29],2) + d[6]*d[8]*std::pow(d[11],2)*d[25]*d[26]*std::pow(d[29],2);
    coeffs[60] = -std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[33],2) - d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[33],2) + d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[34] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[34] + d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35];
    coeffs[61] = std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[33],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[33],2) - d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[33],2) + d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) - std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[34] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[34] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*d[33]*d[34] + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*d[33]*d[34] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[34],2) + 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*d[33]*d[35] - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*d[33]*d[35] + d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[34]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35];
    coeffs[62] = std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[34] + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[34] - 2*d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*d[33]*d[34] + 2*d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] - std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[34],2) + std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[34],2) - d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[34],2) + d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) + d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] + 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*d[34]*d[35] - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*d[34]*d[35];
    coeffs[63] = std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[34] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[34] - std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[34],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[34],2) - d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[34],2) + d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[34],2) + d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[34]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[34]*d[35];
    coeffs[64] = 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) - 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[33],2) - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[35];
    coeffs[65] = 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*std::pow(d[33],2) - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*std::pow(d[33],2) + 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) - 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[33],2) - 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[34] + 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[34] + 4*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*d[33]*d[34] - 4*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[33]*d[34] - 4*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*d[33]*d[35] + 4*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[33]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[34]*d[35];
    coeffs[66] = 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) + 4*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] - 4*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[34] - 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) + 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) + 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) - 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[34],2) - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[35] - 4*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*d[34]*d[35] + 4*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[34]*d[35];
    coeffs[67] = 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[34] - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[34] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*std::pow(d[34],2) + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*std::pow(d[34],2) + 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*std::pow(d[34],2) - 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[34],2) - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[34]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[34]*d[35];
    coeffs[68] = std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[33],2) - d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) + d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*d[33]*d[34] - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[33]*d[34] - std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[35] - 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[33]*d[35] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*d[34]*d[35] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[34]*d[35] + d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) - d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2);
    coeffs[69] = 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) - 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[33],2) - 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[34] + 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*std::pow(d[34],2) - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[34],2) - 2*std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[34]*d[35] + 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*std::pow(d[35],2) - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2);
    coeffs[70] = 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] - 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[34] - std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[34],2) + std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[34],2) - d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) + d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) + std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*d[34]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[34]*d[35] - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[34]*d[35] + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[34]*d[35] + d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[35],2) - d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[35],2);
    coeffs[71] = -std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[33],2) + d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[33],2) - d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[34] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[34] - d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35];
    coeffs[72] = -std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[33],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[33],2) + d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[33],2) - d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) + std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[34] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[34] + 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*d[33]*d[34] - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*d[33]*d[34] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[34],2) - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*d[33]*d[35] + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*d[33]*d[35] - d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[34]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35];
    coeffs[73] = -std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[33],2) + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[34] + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[34] + 2*d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*d[33]*d[34] - 2*d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] + std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[34],2) - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[34],2) + std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[34],2) + d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[34],2) - d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) - d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*d[34]*d[35] + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*d[34]*d[35];
    coeffs[74] = -std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[34] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[34] + std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[34],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[34],2) + d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[34],2) - d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[34],2) - d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[34]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[34]*d[35];
    coeffs[75] = 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[33],2) - 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) + 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) - 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[33],2) - 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[33]*d[35] + 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[35],2);
    coeffs[76] = 4*d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[33],2) - 4*d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) + 4*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] - 4*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[34] - 4*d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*d[34]*d[35] + 4*d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35] - 4*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2) + 4*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[35],2);
    coeffs[77] = 4*d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*d[33]*d[34] - 4*d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[34],2) + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) + 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) - 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[34],2) + 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[35] - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] - 4*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*d[34]*d[35] + 4*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*d[34]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[35],2) + 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[35],2);
    coeffs[78] = std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[33],2) + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[34] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[34] - 2*std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[35] - d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*d[34]*d[35] - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[34]*d[35] - std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[35],2) + d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[35],2) - d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2);
    coeffs[79] = std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[34] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[34],2) + 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*d[33]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[35] - 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*d[34]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[34]*d[35] - d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[34]*d[35] + d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[34]*d[35] - std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[35],2) + d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[35],2) - d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[35],2);
    coeffs[80] = -std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[33],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[33],2) - std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[33],2) + d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[33],2) + d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) - d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*d[33]*d[34] - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[33]*d[34] + std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[33]*d[35] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[33]*d[35] - 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[33]*d[35] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[30],2)*d[34]*d[35] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[34]*d[35] - d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) + d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2);
    coeffs[81] = -2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*std::pow(d[33],2) + 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[33],2) + 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[34] - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*std::pow(d[34],2) - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[34],2) - 2*std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[35] + 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*d[34]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*d[34]*d[35] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*std::pow(d[35],2) + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2);
    coeffs[82] = -2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*d[33]*d[34] + 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[34] + std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[34],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[34],2) + std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[34],2) + d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) - d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) - std::pow(d[14],2)*d[16]*d[17]*std::pow(d[31],2)*d[33]*d[35] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[33]*d[35] + 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*d[34]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*d[34]*d[35] - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*d[34]*d[35] + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*d[34]*d[35] - d[13]*d[14]*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[35],2) + d[12]*d[14]*d[16]*d[17]*std::pow(d[31],2)*std::pow(d[35],2);
    coeffs[83] = 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) + 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[35] - 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) + 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) - 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2) + 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[35],2);
    coeffs[84] = 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[34] - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] + 4*d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*d[33]*d[35] - 4*d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*d[33]*d[35] - 4*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*d[34]*d[35] + 4*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*d[34]*d[35] + 2*std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[34]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[34]*d[35] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[31]*std::pow(d[35],2) + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2) - 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*std::pow(d[35],2) + 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[35],2);
    coeffs[85] = std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[35] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*d[34]*d[35] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[34]*d[35] - std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2) + d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[35],2);
    coeffs[86] = -std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*std::pow(d[33],2) + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[33],2) + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[34] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[34] - 2*std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*d[33]*d[35] + 2*d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[35] + d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] + 2*std::pow(d[14],2)*d[15]*d[17]*d[30]*d[32]*d[34]*d[35] - 2*d[12]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[34]*d[35] + std::pow(d[14],2)*d[16]*d[17]*std::pow(d[30],2)*std::pow(d[35],2) - d[13]*d[14]*std::pow(d[17],2)*std::pow(d[30],2)*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*d[30]*d[31]*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[35],2) - d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[35],2) + d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2);
    coeffs[87] = -std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[34] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[34] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*std::pow(d[34],2) - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*std::pow(d[34],2) - 2*std::pow(d[14],2)*d[16]*d[17]*d[31]*d[32]*d[33]*d[35] + 2*d[13]*d[14]*std::pow(d[17],2)*d[31]*d[32]*d[33]*d[35] + 2*std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*d[34]*d[35] - 2*d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*d[34]*d[35] + d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[34]*d[35] - d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[34]*d[35] + std::pow(d[14],2)*d[16]*d[17]*d[30]*d[31]*std::pow(d[35],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[31]*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*std::pow(d[31],2)*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*std::pow(d[31],2)*std::pow(d[35],2) - d[13]*d[14]*d[15]*d[17]*d[31]*d[32]*std::pow(d[35],2) + d[12]*d[14]*d[16]*d[17]*d[31]*d[32]*std::pow(d[35],2);
    coeffs[88] = 2*d[13]*d[14]*d[15]*d[17]*std::pow(d[32],2)*d[33]*d[35] - 2*d[12]*d[14]*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] - 2*d[13]*d[14]*d[15]*d[17]*d[30]*d[32]*std::pow(d[35],2) + 2*d[12]*d[14]*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2);
    coeffs[89] = -std::pow(d[14],2)*d[16]*d[17]*std::pow(d[32],2)*d[33]*d[35] + d[13]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[33]*d[35] + std::pow(d[14],2)*d[15]*d[17]*std::pow(d[32],2)*d[34]*d[35] - d[12]*d[14]*std::pow(d[17],2)*std::pow(d[32],2)*d[34]*d[35] + std::pow(d[14],2)*d[16]*d[17]*d[30]*d[32]*std::pow(d[35],2) - d[13]*d[14]*std::pow(d[17],2)*d[30]*d[32]*std::pow(d[35],2) - std::pow(d[14],2)*d[15]*d[17]*d[31]*d[32]*std::pow(d[35],2) + d[12]*d[14]*std::pow(d[17],2)*d[31]*d[32]*std::pow(d[35],2);



	// Setup elimination template
	static const int coeffs0_ind[] = { 0,30,60,1,0,30,31,60,61,2,1,31,32,61,62,3,2,32,33,62,63,3,33,63,4,34,0,30,60,64,5,4,34,35,64,1,0,30,31,60,61,65,6,5,35,36,65,2,1,31,32,61,62,66,7,6,36,37,66,3,2,32,33,62,63,67,7,37,67,3,33,63,0,30,1,0,30,31,60,8,38,2,1,0,30,31,32,60,68,61,9,8,38,39,68,3,2,1,31,32,33,61,69,62,10,9,39,40,69,3,2,32,33,62,70,63,10,40,70,3,33,63,11,41,4,34,0,30,60,64,71,12,11,41,42,71,5,4,34,35,64,1,0,30,31,60,61,65,72,13,12,42,43,72,6,5,35,36,65,2,1,31,32,61,62,66,73,14,13,43,44,73,7,6,36,37,66,3,2,32,33,62,63,67,74,14,44,74,7,37,67,3,33,63,4,34,0,30,5,4,34,35,1,0,30,31,64,60,15,45,8,38,6,5,4,34,35,36,2,1,30,0,31,32,64,68,75,60,65,61,16,15,45,46,75,9,8,38,39,68,7,6,5,35,36,37,3,2,31,1,32,33,65,69,76,61,66,62,17,16,46,47,76,10,9,39,40,69,7,6,36,37,3,32,2,33,66,70,77,62,67,63,17,47,77,10,40,70,7,37,33,3,67,63,0,30,60,8,38,1,0,30,31,60,61,9,8,38,39,2,1,30,31,0,32,60,61,68,62,18,48,10,9,8,38,39,40,3,2,31,32,1,33,61,68,62,78,69,63,19,18,48,49,78,10,9,39,40,3,32,33,2,62,69,63,79,70,19,49,79,10,40,33,3,63,70,0,30,60,1,0,30,31,60,61,2,1,0,30,31,32,60,61,62,11,41,4,34,3,2,1,0,30,31,32,33,60,64,71,61,62,63,12,11,41,42,71,5,4,34,35,64,3,2,1,0,30,31,32,33,60,61,65,72,62,63,13,12,42,43,72,6,5,35,36,65,3,2,1,31,32,33,61,62,66,73,63,14,13,43,44,73,7,6,36,37,66,3,2,32,33,62,63,67,74,14,44,74,7,37,67,3,33,63,11,41,4,34,0,30,12,11,41,42,5,4,34,35,1,0,30,31,60,71,64,20,50,15,45,13,12,11,41,42,43,8,38,6,5,34,4,35,36,2,1,30,0,31,32,71,60,68,75,80,64,61,72,65,21,20,50,51,80,16,15,45,46,75,14,13,12,42,43,44,9,8,38,39,68,7,6,35,5,36,37,3,2,31,1,32,33,72,61,69,76,81,65,62,73,66,22,21,51,52,81,17,16,46,47,76,14,13,43,44,10,9,39,40,69,7,36,6,37,3,32,2,33,73,62,70,77,82,66,63,74,67,22,52,82,17,47,77,14,44,10,40,70,37,7,33,3,74,63,67,4,34,0,30,60,64,15,45,8,38,5,4,34,35,1,0,30,31,64,60,61,65,16,15,45,46,9,8,38,39,6,5,34,35,4,36,2,1,30,0,31,32,64,60,65,61,75,68,62,66,23,53,18,48,17,16,15,45,46,47,10,9,38,8,39,40,7,6,35,36,5,37,3,2,31,1,32,33,65,75,61,66,78,83,68,62,76,69,63,67,24,23,53,54,83,19,18,48,49,78,17,16,46,47,10,39,9,40,7,36,37,6,3,32,2,33,66,76,62,67,79,84,69,63,77,70,24,54,84,19,49,79,17,47,40,10,37,7,33,3,67,77,63,70,8,38,0,30,60,68,18,48,9,8,38,39,1,30,31,60,0,61,68,69,19,18,48,49,10,9,38,39,8,40,2,31,32,61,68,1,62,69,78,70,25,55,19,18,48,49,10,39,40,9,3,32,33,62,69,78,2,63,70,85,79,25,55,85,19,49,40,10,33,63,70,79,3,4,0,30,34,60,64,5,4,1,0,30,31,34,35,60,64,61,65,6,5,4,34,2,1,0,30,31,32,35,36,60,64,61,65,62,66,11,41,7,6,5,4,34,35,3,2,1,30,31,0,32,33,36,37,60,64,71,61,65,62,66,63,67,12,11,41,42,71,7,6,5,4,34,35,36,3,2,31,30,32,1,33,37,60,64,0,61,65,72,62,66,63,67,13,12,42,43,72,7,6,5,35,36,37,3,32,31,33,2,61,65,1,62,66,73,63,67,14,13,43,44,73,7,6,36,37,33,32,3,62,66,2,63,67,74,14,44,74,7,37,33,63,67,3,8,0,38,30,60,68,11,41,9,8,4,34,1,0,30,38,39,31,68,60,61,69,12,11,41,42,10,9,8,38,5,4,34,35,2,1,30,0,31,39,40,32,68,69,60,64,71,61,62,70,20,50,15,45,13,12,41,11,42,43,10,9,8,38,39,6,5,34,4,35,36,3,2,31,0,30,1,32,40,68,33,64,75,80,69,70,60,71,61,65,72,62,63,21,20,50,51,80,16,15,45,46,75,14,13,42,12,43,44,10,9,8,38,39,40,7,6,35,5,36,37,3,32,1,31,2,33,68,69,65,76,81,70,61,72,62,66,73,63,22,21,51,52,81,17,16,46,47,76,14,43,13,44,10,9,39,40,7,36,6,37,33,2,32,3,69,70,66,77,82,62,73,63,67,74,22,52,82,17,47,77,44,14,10,40,37,7,3,33,70,67,63,74,11,41,4,34,0,30,64,71,60,20,50,15,45,12,11,41,42,8,38,5,4,34,35,1,30,31,0,71,60,64,65,72,61,21,20,50,51,16,15,45,46,13,12,41,42,11,43,9,8,38,39,6,5,34,4,35,36,71,2,31,30,0,32,1,60,64,72,61,65,68,80,75,66,73,62,26,56,23,53,22,21,20,50,51,52,18,48,17,16,45,15,46,47,14,13,42,43,12,44,10,9,38,8,39,40,7,6,35,5,36,37,72,3,32,31,1,33,2,80,61,65,68,73,78,83,86,75,62,66,69,81,76,67,74,63,27,26,56,57,86,24,23,53,54,83,22,21,51,52,19,18,48,49,78,17,46,16,47,14,43,44,13,10,39,9,40,7,36,6,37,73,33,32,2,3,81,62,66,69,74,79,84,87,76,63,67,70,82,77,27,57,87,24,54,84,22,52,19,49,79,47,17,44,14,40,10,37,7,74,33,3,82,63,67,70,77,15,45,8,38,4,34,30,0,64,60,68,75,23,53,18,48,16,15,45,46,9,8,38,39,5,34,35,64,31,1,0,30,60,4,65,75,61,68,69,76,24,23,53,54,19,18,48,49,17,16,45,46,15,47,10,9,38,8,39,40,6,35,36,65,75,32,2,1,31,61,5,68,66,76,62,69,83,78,70,77,28,58,25,55,24,23,53,54,19,48,18,49,17,46,47,16,10,39,9,40,7,36,37,66,76,33,3,2,32,62,83,6,69,67,77,85,88,78,63,70,84,79,28,58,88,25,55,85,24,54,49,19,47,17,40,10,37,67,77,3,33,63,84,7,70,79,18,48,8,38,30,60,0,68,78,25,55,19,18,48,49,9,38,39,68,31,61,8,1,69,78,79,25,55,19,48,49,18,10,39,40,69,78,32,62,9,2,70,79,85,25,55,49,19,40,70,79,33,63,85,10,3,11,4,34,41,64,71,12,11,5,4,34,35,41,42,64,71,65,72,13,12,11,41,6,5,4,34,35,36,42,43,64,71,65,72,66,73,14,13,12,11,41,42,7,6,5,34,35,4,36,37,43,44,64,71,65,72,66,73,67,74,14,13,12,11,41,42,43,7,6,35,34,36,5,37,44,64,71,4,65,72,66,73,67,74,14,13,12,42,43,44,7,36,35,37,6,65,72,5,66,73,67,74,14,13,43,44,37,36,7,66,73,6,67,74,14,44,37,67,74,7,15,8,4,38,45,30,34,68,0,60,64,75,16,15,11,41,9,8,38,5,4,34,39,45,46,31,0,30,35,68,75,69,1,60,64,61,65,76,17,16,15,45,12,11,41,42,10,9,8,38,39,6,5,34,4,35,40,46,47,32,1,30,31,36,0,68,75,69,76,70,2,60,64,71,61,65,62,66,77,20,50,17,16,15,45,46,13,12,41,11,42,43,10,9,38,39,8,40,7,6,35,4,34,5,36,47,68,75,33,2,31,30,32,0,37,1,71,80,69,76,70,77,3,60,64,61,65,72,62,66,63,67,21,20,50,51,80,17,16,15,45,46,47,14,13,42,12,43,44,10,39,38,40,9,7,36,5,35,6,37,68,75,8,69,76,3,32,31,33,1,2,72,81,70,77,61,65,62,66,73,63,67,22,21,51,52,81,17,16,46,47,14,43,13,44,40,39,10,37,6,36,7,69,76,9,70,77,33,32,2,3,73,82,62,66,63,67,74,22,52,82,17,47,44,14,40,7,37,70,77,10,33,3,74,63,67,18,11,41,8,4,34,48,38,30,0,71,60,64,68,78,20,50,19,18,15,45,12,11,41,42,9,8,38,5,34,35,4,48,49,39,31,1,0,78,60,64,71,30,72,61,65,68,69,79,21,20,50,51,19,18,48,16,15,45,46,13,12,41,11,42,43,10,9,38,8,39,6,35,34,4,36,5,49,40,32,2,0,1,60,64,71,78,79,61,65,72,68,75,80,31,30,73,62,66,69,70,26,56,23,53,22,21,50,20,51,52,19,18,48,49,17,16,45,15,46,47,14,13,42,12,43,44,10,39,8,38,9,40,7,36,35,5,37,6,78,33,3,1,2,61,65,72,75,83,86,79,68,80,62,66,73,69,76,81,32,31,74,63,67,70,27,26,56,57,86,24,23,53,54,83,22,51,21,52,19,18,48,49,17,46,16,47,14,43,13,44,40,9,39,10,37,36,6,7,78,79,2,3,62,66,73,76,84,87,69,81,63,67,74,70,77,82,33,32,27,57,87,24,54,84,52,22,19,49,47,17,44,14,10,40,37,7,79,3,63,67,74,77,70,82,33,20,50,15,45,11,41,8,38,34,4,0,30,71,60,64,75,80,68,26,56,23,53,21,20,50,51,18,48,16,15,45,46,12,41,42,71,9,38,39,8,35,5,4,34,64,11,1,31,60,72,80,0,30,61,65,68,75,76,81,69,27,26,56,57,24,23,53,54,22,21,50,51,20,52,19,18,48,49,17,16,45,15,46,47,13,42,43,72,80,10,39,38,8,40,9,36,6,5,35,65,12,2,32,61,68,75,73,81,1,31,62,66,69,76,78,86,83,77,82,70,29,59,28,58,27,26,56,57,25,55,24,53,23,54,22,51,52,21,19,48,18,49,17,46,16,47,14,43,44,73,81,40,39,9,10,37,7,6,36,66,86,13,3,33,62,69,76,78,74,82,85,88,89,83,2,32,63,67,70,77,79,87,84,29,59,89,28,58,88,27,57,25,55,85,54,24,52,22,49,19,47,17,44,74,82,40,10,7,37,67,87,14,63,70,77,79,84,3,33,23,53,18,48,15,45,38,8,34,64,30,60,0,4,75,68,78,83,28,58,25,55,24,23,53,54,19,18,48,49,16,45,46,75,39,9,8,38,68,35,65,15,31,61,1,5,76,83,69,78,79,84,28,58,25,55,24,53,54,23,19,48,18,49,17,46,47,76,83,40,10,9,39,69,36,66,16,78,32,62,2,6,77,84,70,79,88,85,28,58,55,25,54,24,49,19,47,77,84,10,40,70,37,67,88,17,79,33,63,3,7,85,25,55,18,48,38,68,8,78,85,25,55,19,48,49,78,39,69,18,9,79,85,55,25,49,79,85,40,70,19,10,11,41,71,12,11,41,42,71,72,13,12,11,41,42,43,71,72,73,14,13,12,41,42,11,43,44,71,72,73,74,14,13,42,41,43,12,44,71,11,72,73,74,14,43,42,44,13,72,12,73,74,44,43,14,73,13,74,44,74,14,20,15,11,45,50,34,41,75,4,64,71,80,21,20,16,15,45,12,11,41,46,50,51,35,4,34,42,75,80,76,5,64,71,65,72,81,22,21,20,50,17,16,15,45,46,13,12,41,11,42,47,51,52,36,5,34,35,43,4,75,80,76,81,77,6,64,71,65,72,66,73,82,22,21,20,50,51,17,16,45,46,15,47,14,13,42,11,41,12,43,52,75,80,37,6,35,34,36,4,44,5,76,81,77,82,7,64,71,65,72,66,73,67,74,22,21,20,50,51,52,17,46,45,47,16,14,43,12,42,13,44,75,80,15,76,81,7,36,35,37,5,6,77,82,65,72,66,73,67,74,22,21,51,52,47,46,17,44,13,43,14,76,81,16,77,82,37,36,6,7,66,73,67,74,22,52,47,14,44,77,82,17,37,7,67,74,23,18,15,11,41,48,53,38,45,34,4,78,8,30,0,60,64,71,68,75,83,24,23,20,50,19,18,48,16,15,45,12,41,42,11,49,53,54,39,8,38,46,35,5,4,78,83,79,9,31,1,0,64,71,60,30,34,68,61,65,72,75,69,76,84,24,23,53,21,20,50,51,19,18,48,49,17,16,45,15,46,13,42,41,11,43,12,54,40,9,38,39,47,36,6,4,5,8,64,71,78,83,79,84,10,68,32,2,60,0,1,30,65,72,75,80,61,31,35,34,69,62,66,73,76,70,77,26,56,24,23,53,54,22,21,50,20,51,52,19,48,49,18,17,46,15,45,16,47,14,43,42,12,44,13,78,83,10,39,38,40,8,37,7,5,6,9,65,72,80,86,79,84,68,75,69,33,3,61,1,2,31,66,73,76,81,62,32,36,35,70,63,67,74,77,27,26,56,57,86,24,23,53,54,22,51,21,52,49,48,19,47,16,46,17,44,43,13,14,78,83,18,79,84,40,39,9,6,7,10,66,73,81,87,69,76,70,62,2,3,32,67,74,77,82,63,33,37,36,27,57,87,24,54,52,22,49,17,47,44,14,79,84,19,40,10,7,67,74,82,70,77,63,3,33,37,25,20,50,18,15,45,41,11,55,48,38,8,4,34,60,64,71,0,80,30,68,75,78,85,26,56,25,23,53,21,20,50,51,19,18,48,16,45,46,15,42,12,11,41,71,55,49,39,9,8,5,35,64,85,4,34,61,60,65,72,68,75,80,1,38,81,31,69,76,78,0,30,79,27,26,56,57,25,55,24,23,53,54,22,21,50,20,51,52,19,48,18,49,17,46,45,15,47,16,43,13,12,42,72,40,10,8,9,68,6,36,65,75,80,85,5,35,62,61,66,73,69,76,81,2,78,83,86,39,38,82,32,70,77,79,1,31,29,59,28,58,27,56,26,57,25,55,24,53,23,54,22,51,21,52,49,18,48,19,47,46,16,17,44,14,13,43,73,85,9,10,69,7,37,66,76,81,83,88,89,78,86,6,36,63,62,67,74,70,77,82,3,79,84,87,40,39,33,2,32,29,59,89,28,58,88,57,27,25,55,54,24,52,22,19,49,47,17,14,44,74,85,10,70,67,77,82,84,79,87,7,37,63,40,3,33,26,56,23,53,20,50,18,48,45,15,41,71,8,38,34,64,4,11,80,68,75,0,30,83,86,78,60,29,59,28,58,27,26,56,57,25,55,24,23,53,54,21,50,51,80,19,48,49,18,46,16,15,45,75,42,72,20,9,39,68,35,65,5,12,81,86,8,38,69,76,1,78,83,31,84,87,79,61,29,59,28,58,27,56,57,26,25,55,24,53,23,54,22,51,52,81,86,49,48,18,19,47,17,16,46,76,43,73,21,10,40,69,78,83,36,66,6,13,82,87,9,39,70,77,2,79,84,85,89,88,32,62,29,59,58,28,57,27,55,25,54,24,52,82,87,49,19,17,47,77,44,74,89,22,70,79,84,37,67,7,85,14,88,10,40,3,33,63,28,58,25,55,23,53,48,18,45,75,38,68,8,15,83,78,85,88,28,58,25,55,24,53,54,83,49,19,18,48,78,46,76,23,39,69,9,16,84,88,79,85,25,55,48,78,18,85,20,50,41,80,11,71,26,23,20,53,56,45,50,41,11,83,15,34,4,64,71,75,80,86,27,26,24,23,53,21,20,50,54,56,57,46,15,45,51,42,12,11,83,86,84,16,35,5,4,71,64,34,41,75,65,72,80,76,81,87,28,25,23,20,50,55,58,48,53,45,15,11,41,85,18,38,8,64,71,4,60,0,34,68,75,80,30,78,83,88,28,26,56,25,55,24,23,53,21,50,51,20,58,49,18,48,54,46,16,15,12,42,71,85,88,19,11,41,39,9,8,65,64,72,75,80,5,68,38,61,0,60,30,45,1,35,78,69,76,81,83,4,31,79,34,84,28,58,27,26,56,57,25,55,24,53,23,54,22,51,50,20,52,21,19,48,49,47,17,15,16,18,75,13,43,72,80,85,88,12,42,78,40,10,68,8,9,38,66,65,73,76,81,6,83,86,69,39,62,1,61,31,46,45,2,36,79,70,77,82,84,5,32,35,29,59,28,58,27,56,26,57,55,25,54,23,53,24,52,51,21,22,85,88,49,48,18,16,17,19,76,14,44,73,81,86,89,78,83,13,43,79,69,9,10,39,67,66,74,77,82,7,84,87,70,40,63,2,62,32,47,46,3,37,6,33,36,26,56,25,23,53,50,20,55,48,18,15,45,41,71,11,68,75,80,4,8,0,34,86,38,78,83,30,85,60,64,29,59,28,58,26,56,25,55,53,23,50,80,18,48,45,75,15,20,86,78,83,8,38,88,89,85,68,28,58,55,25,53,83,48,78,18,23,88,85,29,28,26,58,59,53,56,50,20,88,23,45,15,71,11,64,4,41,75,80,34,83,86,89,28,26,56,55,58,53,23,20,50,25,48,18,75,80,11,15,68,4,8,0,41,45,78,83,86,30,34,38,85,88,60,64,71,21,20,50,51,42,11,41,80,81,12,71,72,22,21,20,50,51,52,43,12,41,42,11,80,81,82,13,71,72,73,22,21,50,51,20,52,80,44,13,42,41,43,11,12,81,82,14,71,72,73,74,27,26,56,24,23,53,54,22,21,50,20,51,57,47,16,45,46,52,43,13,11,12,15,71,83,86,84,87,17,75,36,6,64,4,5,34,72,80,65,35,42,41,76,66,73,81,77,82,22,51,50,52,21,80,20,81,14,43,42,44,12,13,82,72,73,74,27,26,56,57,24,53,54,23,22,51,20,50,21,52,83,86,17,46,45,47,15,44,14,12,13,16,72,84,87,75,80,76,37,7,65,5,6,35,73,81,66,36,43,42,77,67,74,82,29,59,28,58,27,56,57,26,25,55,54,24,23,21,51,80,20,50,49,19,18,76,75,81,83,12,86,16,78,48,69,8,68,38,5,53,9,1,42,46,85,79,84,87,88,15,31,35,39,45,61,65,72,29,59,28,58,27,26,56,57,25,55,24,53,54,23,51,21,20,50,80,49,19,18,16,46,75,42,72,12,15,45,69,68,76,81,78,5,83,86,9,1,48,35,87,39,79,84,85,8,31,38,61,65,52,51,22,81,21,82,44,43,13,14,73,74,27,26,56,57,54,53,24,52,21,51,22,83,86,23,84,87,47,46,16,13,14,17,73,76,81,77,66,6,7,36,74,82,67,37,44,43,29,59,58,28,57,56,26,27,55,23,24,25,83,22,52,81,86,21,51,85,78,18,19,48,77,76,82,84,13,87,17,88,89,79,49,70,9,69,39,6,54,53,10,2,43,47,16,32,36,40,46,62,66,73,29,59,28,58,27,56,26,57,55,25,54,53,23,24,52,22,21,51,81,18,19,78,17,47,76,83,86,43,73,13,16,46,70,69,77,82,79,6,84,87,10,85,88,89,2,49,48,36,40,9,32,39,62,66,29,59,28,58,27,56,57,86,55,25,54,24,23,53,83,51,81,26,19,49,78,46,76,16,21,87,89,18,48,79,84,9,85,88,39,69,52,82,22,44,14,74,27,57,54,22,52,84,87,24,47,17,14,74,77,82,67,7,37,44,29,59,89,28,58,57,27,55,24,54,52,22,85,88,25,49,19,17,77,74,82,87,79,84,14,44,70,10,40,67,3,63,33,47,7,37,59,29,58,28,57,27,25,55,54,24,22,52,82,19,79,77,84,87,44,74,14,88,85,89,17,47,70,7,3,49,37,10,33,40,63,67,59,29,58,28,57,87,89,55,25,24,54,84,52,82,27,79,85,88,47,77,17,22,19,49,10,40,70,58,28,55,25,54,84,88,19,49,79,47,77,24,85,40,70,10,17,55,85,49,79,25,19 };
	static const int coeffs1_ind[] = { 29,59,89,89,29,26,56,59,86,59,29,86,26,20,89,50,56,80,59,29,56,26,80,20,11,86,41,50,89,71,29,59,56,89,26,50,20,71,11,80,41,86,26,56,50,86,20,41,11,71,80,27,26,56,57,51,20,50,86,87,21,42,12,11,71,41,80,72,81,29,59,57,26,56,89,27,51,21,20,80,50,72,11,71,41,12,86,81,42,87,27,26,56,57,52,21,50,51,20,86,87,22,80,43,13,71,11,12,41,72,42,81,73,82,29,28,58,27,26,56,59,54,23,53,57,51,21,20,88,89,24,46,16,15,72,71,80,12,75,45,65,4,64,34,50,5,42,83,76,81,86,11,35,84,41,87,29,58,59,56,26,28,53,23,80,20,75,11,15,4,50,83,86,34,41,45,88,89,64,71,29,59,57,27,26,86,56,81,20,80,50,21,12,89,87,42,51,72,29,59,27,56,57,26,89,86,52,22,80,20,21,50,81,51,73,12,72,42,13,87,82,43,27,56,57,26,86,22,51,50,52,20,21,87,80,81,44,14,72,12,13,42,73,43,82,74,29,59,28,58,27,56,26,57,24,53,54,52,22,20,21,23,80,88,89,83,47,17,75,15,16,45,73,72,81,13,86,76,46,66,5,65,35,51,50,6,43,84,77,82,87,12,36,42,29,59,28,58,57,27,26,54,24,23,81,80,86,21,83,53,76,15,75,45,12,56,16,5,51,88,84,87,89,20,35,42,46,50,65,72,59,29,58,28,86,26,83,20,23,15,56,88,89,45,50,53,75,80,29,59,58,28,26,56,55,25,83,86,20,23,78,15,18,8,50,53,85,88,89,38,45,48,68,75,80,29,59,28,58,56,26,55,25,23,53,50,80,20,78,83,86,15,18,8,45,89,48,85,88,38,68,75,29,89,59,87,26,86,56,27,21,51,57,81,59,29,89,86,26,27,56,87,57,82,21,81,51,22,13,43,52,73,59,29,89,57,56,26,27,86,87,81,21,22,51,82,52,74,13,73,43,14,44,57,56,27,86,26,87,52,51,21,22,81,82,73,13,14,43,74,44,29,59,58,28,57,26,56,27,88,89,54,53,23,21,22,24,81,83,86,84,76,16,17,46,74,73,82,14,87,77,47,67,6,66,36,52,51,7,44,13,37,43,59,29,58,26,27,28,86,88,83,23,24,53,82,81,87,22,89,84,54,77,16,76,46,13,57,56,17,6,52,21,36,43,47,51,66,73,29,28,87,86,89,27,88,58,84,23,83,53,21,59,24,16,57,26,46,51,54,56,76,81,59,29,28,27,57,86,26,56,25,84,83,87,88,21,89,24,85,55,79,18,78,48,16,58,19,9,51,54,23,39,46,49,53,69,76,81,29,59,58,28,57,27,26,56,86,25,24,54,83,51,81,21,23,53,79,78,84,87,85,16,88,89,19,9,55,46,49,18,39,48,69,76,89,29,88,26,28,23,59,53,56,58,83,86,29,59,88,89,26,28,85,23,25,18,56,58,48,53,55,78,83,86,59,29,28,58,56,86,26,85,88,89,23,25,18,53,55,48,78,83,29,59,58,28,56,86,25,55,53,83,23,26,89,85,88,18,48,78,29,89,59,27,57,87,89,29,59,27,87,57,22,52,82,59,29,89,87,27,57,22,82,52,14,44,74,59,89,29,57,27,87,82,22,52,14,74,44,57,87,27,52,22,82,74,14,44,29,59,58,27,57,88,89,28,54,24,22,82,84,87,77,17,47,74,7,67,37,52,14,44,29,59,58,28,27,87,88,89,84,24,54,82,17,77,47,14,57,7,22,37,44,52,67,74,59,29,28,58,57,27,55,25,24,84,82,87,89,85,88,22,52,79,19,49,77,14,10,70,40,7,54,3,44,17,33,37,47,63,67,74,29,89,88,28,58,87,24,84,54,22,59,17,27,47,52,57,77,82,59,29,28,88,87,89,27,57,85,25,55,84,22,19,79,49,17,58,10,52,24,40,47,54,70,77,82,59,29,58,28,27,57,87,25,85,84,88,89,52,82,22,24,54,79,17,10,55,47,19,40,49,70,77,89,28,88,58,27,24,29,54,57,59,84,87,89,29,59,88,27,25,85,55,24,19,57,28,49,54,58,79,84,87,29,59,89,88,57,87,27,28,58,85,24,19,54,25,49,55,79,84,59,89,28,58,88,57,87,29,85,54,84,24,27,25,55,19,49,79,58,88,25,55,85,54,84,28,49,79,19,24,29,28,58,59,88,89,29,28,25,59,55,58,85,88,89,59,89,29,28,25,58,55,85,88,59,89,58,88,28,29,25,55,85,58,88,55,85,25,28,55,85,25 };

	static const int C0_ind[] = { 0,3,123,186,187,188,189,190,309,372,373,374,375,376,495,558,559,560,561,562,681,745,746,748,930,933,935,938,1052,1053,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1238,1239,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1424,1425,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1610,1611,1675,1676,1678,1680,1681,1683,1870,1875,2056,2057,2060,2061,2199,2232,2235,2242,2243,2244,2245,2246,2247,2318,2355,2385,2418,2419,2420,2421,2422,2428,2429,2430,2431,2432,2433,2504,2541,2571,2604,2605,2606,2607,2608,2615,2616,2617,2618,2690,2727,2757,2791,2792,2794,2802,2803,2876,2976,2979,2981,2984,2992,2995,3097,3098,3099,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3178,3179,3180,3181,3182,3283,3284,3285,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3364,3365,3366,3367,3368,3469,3470,3471,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3550,3551,3552,3553,3554,3655,3656,3657,3721,3722,3724,3726,3727,3729,3737,3738,3740,3916,3921,3927,3932,4102,4103,4106,4107,4113,4114,4117,4118,4245,4246,4278,4281,4283,4286,4288,4289,4290,4291,4292,4293,4299,4300,4301,4302,4303,4304,4364,4400,4401,4410,4431,4432,4464,4465,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,4477,4478,4479,4485,4486,4487,4488,4489,4490,4550,4586,4587,4596,4617,4618,4650,4651,4652,4653,4654,4655,4656,4657,4658,4659,4661,4662,4663,4664,4672,4673,4674,4675,4736,4772,4773,4782,4803,4804,4837,4838,4840,4842,4843,4845,4848,4849,4859,4860,4922,4968,5049,5054,5190,5218,5223,5235,5236,5238,5240,5328,5376,5404,5405,5408,5409,5421,5422,5423,5424,5425,5426,5451,5514,5547,5562,5580,5583,5590,5591,5592,5593,5594,5595,5607,5608,5609,5610,5611,5612,5637,5666,5700,5703,5733,5748,5766,5767,5768,5769,5770,5777,5778,5779,5780,5794,5795,5796,5797,5823,5852,5886,5889,5919,5953,5954,5956,5964,5965,5981,5983,6009,6038,6171,6228,6323,6357,6358,6413,6414,6451,6509,6543,6544,6545,6550,6599,6600,6635,6637,6695,6701,6704,6712,6715,6729,6730,6731,6732,6735,6736,6785,6786,6791,6817,6818,6821,6823,6881,6887,6888,6889,6890,6891,6898,6899,6900,6901,6902,6916,6917,6918,6919,6920,6921,6922,6971,6974,6977,7003,7004,7007,7009,7073,7074,7075,7076,7077,7084,7085,7086,7087,7088,7103,7104,7105,7106,7107,7108,7160,7163,7189,7190,7193,7259,7260,7261,7262,7263,7270,7271,7272,7273,7274,7290,7291,7292,7293,7346,7349,7375,7376,7446,7447,7449,7457,7458,7460,7477,7478,7532,7636,7641,7647,7652,7667,7672,7822,7823,7826,7827,7833,7834,7837,7838,7853,7854,7857,7858,7964,7965,7966,7998,8001,8003,8006,8008,8009,8010,8011,8012,8013,8014,8017,8019,8020,8021,8022,8023,8024,8039,8040,8041,8042,8043,8044,8084,8115,8119,8120,8121,8130,8150,8151,8152,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8225,8226,8227,8228,8229,8230,8270,8301,8305,8306,8307,8316,8336,8337,8338,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8381,8382,8383,8384,8386,8387,8388,8389,8390,8392,8393,8394,8395,8412,8413,8414,8415,8456,8487,8491,8492,8493,8502,8522,8523,8524,8557,8558,8560,8562,8563,8565,8568,8569,8573,8574,8576,8579,8580,8599,8600,8642,8673,8688,8769,8774,8789,8794,8909,8910,8938,8943,8949,8954,8955,8956,8958,8960,8975,8976,8979,8980,9048,9077,9095,9096,9124,9125,9128,9129,9135,9136,9139,9140,9141,9142,9143,9144,9145,9146,9161,9162,9163,9164,9165,9166,9171,9227,9234,9263,9267,9268,9281,9282,9300,9303,9305,9308,9310,9311,9312,9313,9314,9315,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,9332,9347,9348,9349,9350,9351,9352,9357,9386,9413,9420,9422,9423,9432,9449,9453,9454,9467,9468,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9497,9498,9499,9500,9508,9509,9510,9511,9514,9515,9516,9517,9534,9535,9536,9537,9543,9572,9599,9606,9608,9609,9618,9635,9639,9640,9673,9674,9676,9678,9679,9681,9684,9685,9695,9696,9701,9703,9721,9722,9729,9758,9785,9804,9885,9890,9911,9913,9977,10026,10054,10059,10071,10072,10074,10076,10097,10098,10099,10100,10131,10163,10164,10212,10240,10241,10244,10245,10257,10258,10259,10260,10261,10262,10283,10284,10285,10286,10287,10317,10349,10350,10383,10398,10416,10419,10427,10428,10429,10430,10444,10445,10446,10447,10469,10470,10471,10472,10473,10502,10503,10535,10536,10539,10569,10603,10604,10606,10614,10615,10631,10633,10656,10658,10659,10688,10689,10821,10846,10876,10878,10916,10973,11007,11008,11032,11033,11039,11062,11063,11064,11100,11101,11102,11159,11193,11194,11195,11200,11218,11219,11220,11223,11225,11248,11249,11250,11284,11285,11286,11287,11288,11345,11362,11365,11379,11380,11381,11382,11385,11386,11404,11405,11406,11407,11409,11410,11411,11434,11435,11436,11440,11441,11467,11470,11471,11472,11473,11474,11531,11548,11549,11550,11551,11552,11566,11567,11568,11569,11570,11571,11572,11591,11592,11593,11594,11595,11596,11597,11621,11623,11624,11625,11626,11627,11653,11656,11657,11658,11659,11734,11735,11736,11737,11738,11753,11754,11755,11756,11757,11758,11778,11779,11780,11781,11782,11809,11810,11811,11812,11813,11839,11842,11843,11920,11921,11922,11923,11924,11940,11941,11942,11943,11965,11966,11968,11995,11996,11997,11998,11999,12025,12107,12108,12110,12127,12128,12152,12181,12182,12183,12309,12342,12366,12378,12457,12461,12483,12488,12495,12496,12503,12508,12528,12529,12534,12551,12552,12564,12589,12636,12643,12647,12669,12670,12673,12674,12681,12682,12683,12688,12689,12690,12693,12694,12714,12715,12716,12719,12720,12737,12738,12750,12773,12775,12799,12800,12802,12822,12829,12833,12839,12842,12850,12853,12855,12856,12857,12858,12859,12860,12868,12869,12870,12873,12874,12875,12876,12877,12878,12879,12880,12900,12901,12902,12903,12904,12905,12906,12923,12929,12936,12951,12955,12956,12959,12961,12965,12966,12985,12986,12988,13008,13015,13025,13026,13027,13028,13029,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065,13066,13087,13088,13089,13090,13091,13092,13112,13115,13137,13141,13142,13145,13151,13152,13171,13172,13174,13194,13211,13212,13213,13214,13215,13222,13223,13224,13225,13226,13228,13229,13230,13231,13242,13243,13244,13245,13248,13249,13250,13251,13274,13275,13276,13277,13298,13301,13323,13327,13328,13337,13338,13357,13358,13360,13398,13399,13401,13409,13410,13412,13415,13416,13429,13430,13435,13436,13461,13462,13484,13509,13523,13524,13605,13610,13625,13630,13651,13655,13745,13746,13751,13774,13779,13785,13790,13791,13792,13794,13796,13805,13810,13811,13812,13815,13816,13837,13838,13841,13842,13884,13912,13913,13931,13932,13937,13960,13961,13964,13965,13971,13972,13975,13976,13977,13978,13979,13980,13981,13982,13991,13992,13995,13996,13997,13998,13999,14000,14001,14002,14007,14023,14024,14025,14026,14027,14028,14062,14063,14070,14098,14099,14102,14103,14104,14117,14118,14123,14136,14139,14141,14144,14146,14147,14148,14149,14150,14151,14152,14155,14157,14158,14159,14160,14161,14162,14163,14164,14165,14166,14167,14168,14177,14178,14179,14180,14181,14182,14183,14184,14185,14186,14187,14188,14193,14209,14210,14211,14212,14213,14214,14222,14248,14249,14253,14256,14257,14258,14259,14268,14284,14285,14288,14289,14290,14303,14304,14309,14322,14323,14324,14325,14326,14327,14328,14329,14330,14331,14333,14334,14335,14336,14338,14339,14340,14341,14342,14344,14345,14346,14347,14350,14351,14352,14353,14364,14365,14366,14367,14370,14371,14372,14373,14379,14396,14397,14398,14400,14408,14434,14435,14439,14442,14443,14444,14445,14454,14470,14471,14474,14475,14476,14509,14510,14512,14514,14515,14517,14520,14521,14525,14526,14528,14531,14532,14537,14539,14551,14552,14557,14558,14565,14583,14584,14594,14620,14621,14625,14640,14721,14726,14741,14746,14747,14749,14773,14774,14813,14839,14861,14862,14890,14895,14901,14906,14907,14908,14910,14912,14927,14928,14931,14932,14933,14934,14935,14936,14959,14960,14961,14962,14963,14967,14999,15000,15025,15029,15047,15048,15076,15077,15080,15081,15087,15088,15091,15092,15093,15094,15095,15096,15097,15098,15113,15114,15115,15116,15117,15118,15119,15120,15121,15122,15123,15145,15146,15147,15148,15149,15153,15179,15185,15186,15211,15215,15219,15220,15233,15234,15252,15255,15257,15260,15263,15264,15265,15266,15274,15275,15276,15277,15280,15281,15282,15283,15300,15301,15302,15303,15305,15306,15307,15308,15309,15331,15332,15333,15334,15335,15338,15339,15365,15371,15372,15374,15375,15384,15397,15401,15405,15406,15439,15440,15442,15444,15445,15447,15450,15451,15461,15462,15467,15469,15487,15488,15492,15494,15495,15519,15520,15521,15524,15525,15551,15570,15651,15656,15677,15679,15708,15709,15742,15743,15792,15820,15825,15837,15838,15840,15842,15863,15864,15865,15866,15894,15895,15897,15928,15929,15930,15978,16007,16010,16024,16025,16026,16027,16049,16050,16051,16052,16053,16080,16081,16083,16114,16115,16116,16149,16194,16195,16211,16213,16236,16238,16239,16266,16267,16268,16269,16300,16401,16426,16456,16458,16496,16553,16587,16588,16612,16613,16619,16642,16643,16644,16680,16681,16682,16739,16773,16774,16775,16780,16798,16799,16800,16803,16805,16828,16829,16830,16864,16865,16866,16867,16868,16925,16959,16960,16961,16962,16965,16966,16984,16985,16986,16987,16989,16990,16991,17014,17015,17016,17020,17021,17050,17051,17052,17053,17054,17111,17146,17147,17148,17149,17150,17151,17152,17171,17172,17173,17174,17175,17176,17177,17201,17203,17204,17205,17206,17207,17236,17237,17238,17239,17333,17334,17335,17336,17337,17338,17358,17359,17360,17361,17362,17389,17390,17391,17392,17393,17422,17423,17520,17521,17522,17523,17545,17546,17548,17575,17576,17577,17578,17579,17707,17708,17732,17761,17762,17763,17889,17914,17922,17944,17946,17952,17958,17984,17985,18035,18037,18041,18075,18076,18083,18088,18100,18101,18107,18108,18109,18114,18130,18131,18132,18138,18139,18142,18144,18168,18169,18170,18171,18212,18216,18221,18223,18227,18261,18262,18263,18268,18269,18270,18273,18274,18286,18287,18288,18291,18293,18294,18295,18296,18299,18300,18316,18317,18318,18324,18325,18326,18328,18330,18335,18352,18353,18354,18355,18356,18357,18363,18379,18380,18398,18402,18407,18409,18413,18430,18433,18448,18449,18450,18453,18454,18455,18456,18457,18458,18459,18460,18473,18474,18475,18477,18478,18479,18480,18481,18482,18483,18484,18485,18486,18503,18508,18509,18510,18511,18512,18513,18514,18515,18516,18521,18531,18535,18538,18539,18540,18541,18543,18544,18545,18549,18565,18566,18584,18588,18593,18595,18616,18617,18618,18619,18620,18635,18636,18637,18638,18639,18640,18641,18642,18643,18644,18645,18646,18660,18661,18662,18663,18664,18667,18668,18669,18670,18671,18672,18691,18692,18693,18694,18695,18697,18698,18699,18700,18701,18707,18717,18721,18724,18725,18730,18731,18735,18751,18752,18770,18774,18802,18803,18804,18805,18806,18822,18823,18824,18825,18828,18829,18830,18831,18847,18848,18850,18854,18855,18856,18857,18877,18878,18879,18880,18881,18884,18885,18887,18893,18903,18907,18916,18917,18921,18937,18938,18989,18990,18992,19009,19010,19015,19016,19034,19041,19042,19063,19064,19065,19071,19073,19089,19102,19103,19191,19205,19210,19224,19231,19235,19248,19260,19261,19262,19325,19330,19331,19339,19343,19365,19370,19377,19378,19385,19390,19391,19392,19395,19396,19410,19411,19416,19417,19418,19421,19422,19433,19434,19446,19447,19448,19450,19471,19490,19492,19493,19506,19511,19516,19517,19518,19525,19529,19551,19552,19555,19556,19564,19565,19570,19571,19572,19575,19576,19577,19578,19579,19580,19581,19582,19596,19597,19598,19601,19602,19603,19604,19605,19606,19607,19608,19619,19632,19633,19634,19635,19636,19638,19642,19643,19655,19657,19676,19678,19679,19681,19682,19684,19692,19693,19697,19702,19703,19704,19711,19721,19724,19732,19735,19737,19738,19739,19740,19741,19742,19751,19752,19755,19756,19757,19758,19759,19760,19761,19762,19763,19764,19765,19766,19767,19768,19783,19784,19785,19786,19787,19788,19789,19790,19791,19792,19793,19794,19811,19819,19820,19821,19822,19824,19828,19829,19833,19837,19838,19841,19847,19848,19862,19864,19865,19867,19868,19870,19878,19879,19883,19888,19889,19890,19907,19908,19909,19910,19911,19918,19919,19920,19921,19922,19924,19925,19926,19927,19938,19939,19940,19941,19944,19945,19946,19947,19950,19951,19952,19953,19970,19971,19972,19973,19976,19977,19978,19980,19994,19997,20007,20008,20010,20014,20015,20019,20023,20024,20033,20034,20048,20050,20051,20053,20054,20056,20064,20065,20094,20095,20097,20105,20106,20108,20111,20112,20125,20126,20131,20132,20137,20138,20157,20158,20163,20164,20180,20193,20196,20200,20201,20205,20219,20220,20251,20301,20306,20321,20326,20327,20329,20347,20351,20353,20354,20383,20384,20393,20418,20419,20441,20442,20447,20470,20475,20481,20486,20487,20488,20490,20492,20501,20506,20507,20508,20511,20512,20513,20514,20515,20516,20533,20534,20537,20538,20539,20540,20541,20542,20543,20547,20569,20570,20571,20579,20580,20593,20594,20604,20605,20608,20609,20627,20628,20633,20656,20657,20660,20661,20667,20668,20671,20672,20673,20674,20675,20676,20677,20678,20687,20688,20691,20692,20693,20694,20695,20696,20697,20698,20699,20700,20701,20702,20703,20719,20720,20721,20722,20723,20724,20725,20726,20727,20728,20729,20733,20755,20756,20757,20758,20759,20765,20766,20779,20780,20790,20791,20794,20795,20798,20799,20800,20813,20814,20819,20832,20835,20837,20840,20843,20844,20845,20846,20848,20851,20854,20855,20856,20857,20860,20861,20862,20863,20874,20875,20876,20877,20880,20881,20882,20883,20885,20886,20887,20888,20889,20906,20907,20908,20910,20911,20912,20913,20914,20915,20918,20919,20941,20942,20943,20944,20945,20949,20951,20952,20953,20954,20955,20964,20965,20966,20976,20977,20980,20981,20984,20985,20986,21019,21020,21022,21024,21025,21027,21030,21031,21035,21036,21038,21041,21042,21047,21049,21061,21062,21067,21068,21072,21074,21075,21093,21094,21099,21100,21101,21104,21105,21129,21130,21131,21135,21150,21151,21152,21231,21236,21251,21256,21257,21259,21283,21284,21288,21289,21318,21319,21320,21322,21323,21349,21371,21372,21400,21405,21411,21416,21417,21418,21420,21422,21437,21438,21441,21442,21443,21444,21445,21446,21469,21470,21471,21472,21473,21474,21475,21477,21504,21505,21506,21508,21509,21510,21535,21539,21557,21558,21587,21590,21598,21601,21604,21605,21606,21607,21624,21625,21626,21627,21629,21630,21631,21632,21633,21655,21656,21657,21658,21659,21660,21661,21663,21689,21690,21691,21692,21694,21695,21696,21721,21725,21729,21730,21774,21775,21785,21786,21791,21793,21811,21812,21816,21818,21819,21843,21844,21845,21846,21847,21848,21849,21875,21876,21877,21878,21880,21894,21975,21980,22001,22003,22032,22033,22066,22067,22116,22162,22164,22187,22188,22189,22190,22218,22219,22221,22252,22253,22254,22349,22351,22374,22376,22377,22404,22405,22407,22438,22564,22594,22634,22750,22751,22757,22780,22818,22820,22936,22937,22938,22941,22943,22966,23002,23004,23006,23122,23123,23124,23125,23127,23128,23129,23152,23158,23188,23190,23192,23309,23310,23311,23312,23313,23314,23315,23341,23343,23344,23374,23376,23496,23497,23498,23499,23500,23527,23529,23530,23560,23683,23684,23686,23713,23715,23716,23870,23899,23901,24027,24052,24060,24082,24084,24090,24096,24122,24123,24173,24175,24179,24213,24214,24238,24239,24245,24246,24247,24252,24268,24269,24270,24276,24277,24280,24282,24306,24307,24308,24309,24350,24354,24359,24361,24365,24399,24400,24401,24406,24424,24425,24426,24429,24431,24432,24433,24434,24437,24438,24454,24455,24456,24462,24463,24464,24466,24468,24473,24490,24491,24492,24493,24494,24495,24501,24517,24536,24540,24545,24547,24551,24586,24587,24588,24591,24592,24611,24612,24613,24615,24616,24617,24618,24619,24620,24621,24622,24623,24624,24641,24646,24647,24648,24649,24650,24651,24652,24653,24654,24659,24676,24677,24678,24679,24681,24682,24683,24687,24703,24722,24726,24731,24733,24773,24774,24775,24776,24777,24778,24798,24799,24800,24801,24802,24805,24806,24807,24808,24809,24810,24829,24830,24831,24832,24833,24835,24836,24837,24838,24839,24845,24862,24863,24868,24869,24873,24889,24908,24912,24960,24961,24962,24963,24985,24986,24988,24992,24993,24994,24995,25015,25016,25017,25018,25019,25022,25023,25025,25031,25054,25055,25059,25075,25147,25148,25172,25179,25180,25201,25202,25203,25209,25211,25240,25241,25329,25354,25362,25369,25373,25384,25386,25392,25398,25399,25400,25424,25425,25432,25433,25467,25468,25469,25475,25477,25481,25515,25516,25523,25528,25540,25541,25547,25548,25549,25554,25555,25556,25559,25560,25570,25571,25572,25578,25579,25582,25584,25585,25586,25588,25608,25609,25610,25611,25618,25619,25622,25628,25630,25637,25638,25644,25652,25653,25654,25655,25656,25661,25663,25667,25702,25703,25708,25709,25710,25713,25714,25727,25728,25731,25733,25734,25735,25736,25739,25740,25741,25742,25743,25744,25745,25746,25757,25764,25765,25766,25768,25770,25771,25772,25773,25774,25775,25776,25780,25792,25793,25794,25795,25797,25803,25804,25805,25806,25807,25808,25809,25814,25816,25819,25820,25823,25824,25830,25831,25838,25839,25840,25841,25842,25847,25849,25870,25873,25889,25890,25893,25894,25895,25896,25897,25898,25899,25900,25914,25915,25917,25918,25921,25922,25923,25924,25925,25926,25927,25928,25929,25930,25931,25932,25948,25949,25951,25952,25953,25954,25955,25957,25958,25959,25960,25961,25962,25966,25971,25975,25978,25979,25984,25985,25989,25990,25991,25992,25993,25994,25995,26000,26002,26005,26006,26009,26010,26016,26017,26024,26025,26026,26027,26028,26056,26057,26058,26059,26060,26076,26077,26078,26079,26082,26083,26084,26085,26101,26102,26104,26108,26109,26110,26111,26114,26115,26116,26118,26131,26132,26133,26134,26135,26138,26139,26141,26145,26146,26147,26148,26152,26157,26161,26170,26171,26175,26178,26179,26180,26181,26186,26188,26191,26192,26195,26196,26202,26203,26243,26244,26246,26263,26264,26269,26270,26288,26295,26296,26301,26302,26317,26318,26319,26325,26327,26331,26334,26338,26343,26356,26357,26364,26365,26367,26389,26445,26459,26464,26478,26485,26489,26491,26492,26502,26514,26515,26516,26521,26522,26554,26556,26557,26562,26579,26581,26584,26585,26593,26597,26619,26624,26632,26639,26644,26645,26646,26649,26650,26664,26665,26670,26671,26672,26675,26676,26677,26678,26679,26680,26681,26687,26700,26701,26702,26704,26707,26708,26709,26725,26731,26732,26740,26741,26742,26743,26744,26746,26747,26748,26760,26765,26767,26770,26771,26772,26773,26778,26779,26805,26806,26809,26810,26819,26824,26825,26826,26829,26830,26831,26832,26833,26834,26835,26836,26851,26852,26855,26856,26857,26858,26859,26860,26861,26862,26863,26864,26865,26866,26867,26887,26888,26889,26890,26892,26893,26894,26895,26896,26897,26909,26917,26918,26926,26927,26928,26929,26930,26932,26933,26934,26935,26936,26938,26946,26947,26951,26953,26956,26957,26958,26959,26964,26975,26978,26986,26989,26992,26993,26994,26995,27006,27009,27012,27013,27014,27015,27018,27019,27020,27021,27038,27039,27040,27041,27044,27045,27046,27048,27049,27050,27051,27052,27053,27065,27075,27076,27078,27079,27080,27081,27082,27083,27087,27091,27092,27101,27102,27103,27104,27112,27113,27114,27115,27116,27118,27119,27120,27121,27122,27124,27132,27133,27139,27145,27150,27162,27163,27165,27173,27174,27176,27179,27180,27193,27194,27199,27200,27205,27206,27225,27226,27231,27232,27237,27238,27239,27248,27261,27264,27267,27268,27269,27273,27287,27288,27289,27290,27299,27319,27331,27336,27369,27374,27389,27394,27395,27397,27415,27419,27421,27422,27426,27427,27451,27452,27456,27457,27458,27460,27461,27486,27487,27489,27508,27509,27510,27515,27526,27538,27543,27549,27554,27555,27556,27558,27560,27569,27574,27575,27576,27579,27580,27581,27582,27583,27584,27601,27602,27605,27606,27607,27608,27609,27610,27611,27612,27613,27615,27637,27638,27639,27642,27643,27644,27646,27647,27648,27661,27662,27672,27673,27675,27676,27677,27694,27695,27696,27701,27712,27725,27728,27736,27739,27742,27743,27744,27745,27756,27759,27762,27763,27764,27765,27767,27768,27769,27770,27771,27788,27789,27790,27792,27793,27794,27795,27796,27797,27798,27799,27801,27823,27824,27825,27826,27827,27828,27829,27830,27832,27833,27834,27847,27848,27858,27859,27861,27862,27863,27866,27867,27868,27880,27898,27912,27913,27923,27924,27929,27931,27943,27944,27949,27950,27954,27956,27957,27975,27976,27981,27982,27983,27984,27985,27986,27987,28011,28012,28013,28014,28015,28016,28017,28018,28032,28033,28034,28047,28066,28084,28113,28118,28133,28138,28139,28141,28165,28166,28170,28171,28200,28201,28202,28204,28205,28231,28253,28254,28300,28302,28320,28323,28325,28326,28327,28328,28351,28352,28353,28354,28355,28356,28357,28359,28386,28387,28388,28390,28391,28392,28417,28421,28511,28513,28542,28543,28576,28577,28702,28732,28740,28772,28773,28823,28863,28888,28896,28918,28920,28926,28932,28933,28934,28958,28959,28966,28967,29001,29002,29009,29011,29015,29049,29050,29074,29075,29081,29082,29083,29088,29104,29105,29106,29112,29113,29116,29118,29119,29120,29122,29142,29143,29144,29145,29152,29153,29156,29162,29171,29172,29178,29186,29187,29188,29190,29195,29197,29201,29235,29260,29268,29275,29279,29290,29292,29298,29304,29305,29306,29311,29312,29330,29331,29338,29339,29344,29346,29352,29359,29366,29371,29373,29374,29375,29380,29381,29383,29387,29422,29429,29434,29447,29453,29454,29455,29460,29461,29462,29465,29466,29477,29484,29485,29488,29490,29491,29492,29494,29497,29498,29499,29514,29515,29517,29521,29522,29524,29525,29528,29530,29531,29532,29534,29536,29538,29543,29544,29545,29546,29547,29548,29550,29552,29557,29558,29559,29560,29561,29562,29563,29566,29567,29568,29569,29609,29614,29615,29616,29619,29620,29634,29637,29641,29642,29645,29646,29647,29648,29649,29650,29651,29652,29671,29672,29674,29677,29678,29679,29680,29681,29682,29683,29684,29685,29686,29698,29699,29707,29708,29709,29710,29711,29712,29713,29714,29715,29716,29717,29718,29720,29722,29724,29725,29726,29729,29730,29731,29732,29733,29734,29736,29737,29738,29743,29744,29745,29746,29747,29748,29749,29752,29754,29776,29779,29796,29799,29802,29803,29804,29805,29821,29824,29828,29829,29830,29831,29834,29835,29836,29838,29854,29855,29858,29859,29861,29865,29866,29867,29868,29869,29870,29871,29872,29877,29881,29890,29891,29893,29894,29895,29898,29899,29900,29901,29902,29903,29904,29906,29908,29910,29911,29912,29915,29916,29917,29918,29919,29920,29922,29923,29924,29929,29935,29938,29940,29993,29998,30012,30019,30023,30025,30026,30048,30049,30050,30055,30056,30060,30061,30062,30088,30090,30091,30093,30096,30107,30112,30113,30115,30118,30119,30123,30127,30129,30130,30159,30164,30179,30184,30185,30187,30205,30209,30211,30212,30216,30217,30241,30242,30246,30247,30248,30250,30251,30276,30277,30279,30298,30299,30300,30305,30316,30371,30373,30397,30398,30402,30403,30432,30433,30434,30436,30437,30463,30537,30562,30570,30592,30594,30600,30606,30607,30608,30632,30633,30640,30641,30646,30654,30661,30668,30673,30675,30676,30682,30683,30685,30689,30756,30763,30767,30786,30792,30793,30794,30799,30800,30819,30826,30827,30832,30834,30837,30840,30847,30851,30854,30855,30856,30859,30861,30862,30863,30866,30867,30868,30869,30871,30872,30873,30874,30934,30935,30941,30964,30972,30973,30976,31002,31004,31005,31046,31055,31120,31121,31122,31125,31127,31150,31158,31159,31160,31162,31169,31186,31188,31190,31191,31197,31232,31241,31307,31308,31309,31311,31312,31313,31342,31344,31345,31346,31347,31348,31349,31355,31372,31374,31377,31378,31383,31418,31427,31468,31469,31474,31493,31494,31497,31499,31500,31501,31502,31505,31506,31523,31530,31531,31532,31534,31536,31537,31538,31539,31540,31541,31542,31558,31559,31560,31561,31563,31569,31570,31571,31572,31573,31574,31575,31580,31585,31589,31590,31596,31597,31604,31605,31606,31608,31613,31615,31680,31681,31682,31683,31684,31711,31713,31714,31717,31718,31719,31720,31721,31727,31744,31750,31755,31790,31841,31842,31845,31846,31866,31867,31869,31870,31873,31874,31875,31876,31877,31878,31900,31901,31903,31904,31905,31906,31907,31909,31910,31911,31912,31913,31914,31930,31931,31936,31937,31941,31942,31943,31944,31945,31946,31947,31952,31957,31961,31962,31968,31969,31976,31977,31978,31980,32033,32038,32059,32064,32065,32066,32069,32070,32089,32092,32095,32096,32098,32101,32102,32103,32125,32126,32128,32129,32132,32134,32135,32136,32138,32139,32140,32142,32147,32148,32149,32150,32151,32152,32153,32154,32156,32157,32158,32161,32162,32163,32164,32165,32166,32167,32168,32169,32170,32172,32174,32175,32176,32199,32204,32219,32224,32225,32226,32229,32230,32245,32250,32251,32252,32255,32256,32257,32258,32259,32260,32261,32281,32282,32284,32287,32288,32289,32292,32293,32294,32311,32312,32320,32321,32322,32323,32324,32325,32326,32327,32328,32339,32340,32344,32345,32347,32350,32351,32352,32353,32355,32358,32361,32362,32425,32426,32428,32455,32457,32458,32462,32463,32465,32471,32494,32499,32586,32587,32588,32589,32611,32612,32614,32618,32619,32620,32621,32641,32642,32643,32644,32645,32648,32649,32651,32655,32656,32657,32658,32680,32681,32685,32688,32689,32690,32691,32696,32701,32705,32706,32712,32713,32778,32781,32804,32807,32810,32811,32812,32814,32834,32841,32842,32843,32844,32845,32846,32847,32848,32869,32870,32871,32874,32875,32876,32877,32878,32879,32880,32882,32883,32884,32886,32887,32888,32891,32892,32893,32894,32895,32896,32897,32898,32899,32900,32901,32902,32905,32911,32912,32913,32914,32916,32918,32919,32920,32944,32947,32964,32967,32970,32971,32972,32973,32990,32993,32996,32997,32998,33000,33001,33002,33003,33004,33005,33027,33028,33030,33031,33032,33033,33034,33035,33036,33037,33038,33055,33056,33064,33065,33066,33067,33068,33069,33070,33071,33072,33073,33074,33076,33083,33084,33085,33088,33091,33097,33099,33102,33105,33106,33136,33138,33156,33159,33161,33162,33163,33164,33182,33186,33187,33188,33189,33190,33191,33192,33193,33195,33217,33218,33219,33222,33223,33224,33226,33227,33228,33241,33242,33252,33253,33255,33256,33257,33274,33292,33356,33385,33387,33393,33395,33424,33517,33518,33542,33549,33550,33571,33572,33573,33579,33581,33585,33588,33610,33611,33618,33619,33621,33643,33683,33684,33686,33703,33704,33709,33710,33728,33735,33736,33741,33742,33757,33758,33759,33765,33767,33771,33774,33777,33778,33783,33796,33797,33799,33800,33804,33805,33807,33809,33824,33825,33826,33829,33841,33846,33875,33876,33895,33896,33901,33902,33921,33922,33927,33928,33933,33934,33935,33957,33960,33963,33964,33965,33966,33967,33968,33969,33983,33984,33985,33986,33995,33999,34013,34015,34018,34027,34029,34032,34035,34036,34067,34069,34087,34088,34092,34094,34095,34113,34114,34119,34120,34121,34122,34123,34125,34149,34150,34151,34152,34153,34154,34156,34171,34172,34185,34204,34222,34253,34255,34273,34274,34278,34280,34281,34305,34306,34307,34308,34309,34311,34337,34338,34339,34340,34342,34464,34466,34494,34495,34497,34528 } ;
	static const int C1_ind[] = {};

	MatrixXd C0 = MatrixXd::Zero(186,186);
	MatrixXd C1 = MatrixXd::Zero(186,54);
	for (int i = 0; i < 4545; i++) { C0(C0_ind[i]) = coeffs(coeffs0_ind[i]); }
	for (int i = 0; i < 1035; i++) { C1(C1_ind[i]) = coeffs(coeffs1_ind[i]); } 

	MatrixXd C12 = C0.partialPivLu().solve(C1);



	// Setup action matrix
	Matrix<double,74, 54> RR;
	RR << -C12.bottomRows(20), Matrix<double,54,54>::Identity(54, 54);

	static const int AM_ind[] = { 52,39,31,27,26,0,1,28,2,3,29,32,33,4,5,34,35,6,7,40,41,42,8,9,43,44,10,11,45,46,47,12,53,54,55,56,13,14,57,15,58,59,16,60,61,62,17,18,63,64,65,66,67,19 };
	Matrix<double, 54, 54> AM;
	for (int i = 0; i < 54; i++) {
		AM.row(i) = RR.row(AM_ind[i]);
	}

	Matrix<std::complex<double>, 3, 54> sols;
	sols.setZero();

	// Solve eigenvalue problem


	double p[1+54];
	Matrix<double, 54, 54> AMp = AM;
	charpoly_danilevsky_piv(AMp, p);	
	double roots[54];
	int nroots;
	find_real_roots_sturm(p, 54, roots, &nroots, 8, 0);
	fast_eigenvector_solver(roots, nroots, AM, sols);



	return sols;
}
// Action =  y
// Quotient ring basis (V) = 1,x,x^2,x^3,x^4,x^5,x^4*y,x^3*y,x^3*y^2,x^3*y*z,x^3*z,x^2*y,x^2*y^2,x^2*y^3,x^2*y^2*z,x^2*y*z,x^2*z,x^2*z^2,x^2*z^3,x*y,x*y^2,x*y^3,x*y^4,x*y^3*z,x*y^2*z,x*y*z,x*y*z^2,x*y*z^3,x*z,x*z^2,x*z^3,x*z^4,y,y^2,y^3,y^4,y^5,y^4*z,y^3*z,y^3*z^2,y^2*z,y^2*z^2,y^2*z^3,y*z,y*z^2,y*z^3,y*z^4,y*z^5,z,z^2,z^3,z^4,z^5,z^6,
// Available monomials (RR*V) = x^5*y,x^4*y^2,x^3*y^3,x^3*y^2*z,x^2*y^4,x^2*y^3*z,x^2*y*z^2,x^2*y*z^3,x*y^5,x*y^4*z,x*y^2*z^2,x*y^2*z^3,x*y*z^4,y^6,y^5*z,y^4*z^2,y^3*z^3,y^2*z^4,y^2*z^5,y*z^6,1,x,x^2,x^3,x^4,x^5,x^4*y,x^3*y,x^3*y^2,x^3*y*z,x^3*z,x^2*y,x^2*y^2,x^2*y^3,x^2*y^2*z,x^2*y*z,x^2*z,x^2*z^2,x^2*z^3,x*y,x*y^2,x*y^3,x*y^4,x*y^3*z,x*y^2*z,x*y*z,x*y*z^2,x*y*z^3,x*z,x*z^2,x*z^3,x*z^4,y,y^2,y^3,y^4,y^5,y^4*z,y^3*z,y^3*z^2,y^2*z,y^2*z^2,y^2*z^3,y*z,y*z^2,y*z^3,y*z^4,y*z^5,z,z^2,z^3,z^4,z^5,z^6,


void fast_eigenvector_solver(double * eigv, int neig, Eigen::Matrix<double,54,54> &AM, Matrix<std::complex<double>,3,54> &sols) {
	static const int ind[] = { 5,6,8,9,13,14,17,18,22,23,26,27,31,36,37,39,42,46,47,53 };	
	// Truncated action matrix containing non-trivial rows
	Matrix<double, 20, 54> AMs;
	double zi[6];
	
	for (int i = 0; i < 20; i++)	{
		AMs.row(i) = AM.row(ind[i]);
	}
	for (int i = 0; i < neig; i++) {
		zi[0] = eigv[i];
		for (int j = 1; j < 6; j++)
		{
			zi[j] = zi[j - 1] * eigv[i];
		}
		Matrix<double, 20,20> AA;
        AA.col(0) = AMs.col(5);
        AA.col(1) = AMs.col(4) + zi[0] * AMs.col(6);
        AA.col(2) = zi[0] * AMs.col(9) + AMs.col(10);
        AA.col(3) = AMs.col(3) + zi[0] * AMs.col(7) + zi[1] * AMs.col(8);
        AA.col(4) = AMs.col(18);
        AA.col(5) = AMs.col(17);
        AA.col(6) = zi[1] * AMs.col(14) + zi[0] * AMs.col(15) + AMs.col(16);
        AA.col(7) = AMs.col(2) + zi[0] * AMs.col(11) + zi[1] * AMs.col(12) + zi[2] * AMs.col(13);
        AA.col(8) = AMs.col(31);
        AA.col(9) = zi[0] * AMs.col(27) + AMs.col(30);
        AA.col(10) = zi[0] * AMs.col(26) + AMs.col(29);
        AA.col(11) = zi[2] * AMs.col(23) + zi[1] * AMs.col(24) + zi[0] * AMs.col(25) + AMs.col(28);
        AA.col(12) = AMs.col(1) + zi[0] * AMs.col(19) + zi[1] * AMs.col(20) + zi[2] * AMs.col(21) + zi[3] * AMs.col(22);
        AA.col(13) = AMs.col(53);
        AA.col(14) = zi[0] * AMs.col(47) + AMs.col(52);
        AA.col(15) = zi[0] * AMs.col(46) + AMs.col(51);
        AA.col(16) = zi[1] * AMs.col(42) + zi[0] * AMs.col(45) + AMs.col(50);
        AA.col(17) = zi[2] * AMs.col(39) + zi[1] * AMs.col(41) + zi[0] * AMs.col(44) + AMs.col(49);
        AA.col(18) = zi[3] * AMs.col(37) + zi[2] * AMs.col(38) + zi[1] * AMs.col(40) + zi[0] * AMs.col(43) + AMs.col(48);
        AA.col(19) = AMs.col(0) + zi[0] * AMs.col(32) + zi[1] * AMs.col(33) + zi[2] * AMs.col(34) + zi[3] * AMs.col(35) + zi[4] * AMs.col(36);
        AA(0,0) = AA(0,0) - zi[0];
        AA(1,1) = AA(1,1) - zi[1];
        AA(3,2) = AA(3,2) - zi[1];
        AA(2,3) = AA(2,3) - zi[2];
        AA(7,4) = AA(7,4) - zi[0];
        AA(6,5) = AA(6,5) - zi[0];
        AA(5,6) = AA(5,6) - zi[2];
        AA(4,7) = AA(4,7) - zi[3];
        AA(12,8) = AA(12,8) - zi[0];
        AA(11,9) = AA(11,9) - zi[1];
        AA(10,10) = AA(10,10) - zi[1];
        AA(9,11) = AA(9,11) - zi[3];
        AA(8,12) = AA(8,12) - zi[4];
        AA(19,13) = AA(19,13) - zi[0];
        AA(18,14) = AA(18,14) - zi[1];
        AA(17,15) = AA(17,15) - zi[1];
        AA(16,16) = AA(16,16) - zi[2];
        AA(15,17) = AA(15,17) - zi[3];
        AA(14,18) = AA(14,18) - zi[4];
        AA(13,19) = AA(13,19) - zi[5];


		Matrix<double, 19, 1>  s = AA.leftCols(19).colPivHouseholderQr().solve(-AA.col(19));
        sols(0,i) = s(12);
        sols(1,i) = zi[0];
        sols(2,i) = s(18);

	}
}



/*void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	if (nrhs != 1) {
		mexErrMsgIdAndTxt("automatic_generator_cvpr:1vp_222cl:nrhs", "One input required.");
	}
	if (nlhs != 1) {
		mexErrMsgIdAndTxt("automatic_generator_cvpr:1vp_222cl:nlhs", "One output required.");
	}    
	if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0])) {
		mexErrMsgIdAndTxt("automatic_generator_cvpr:1vp_222cl:notDouble", "Input data must be type double.");
	}
	if(mxGetNumberOfElements(prhs[0]) % 36 != 0) {
		mexErrMsgIdAndTxt("automatic_generator_cvpr:1vp_222cl:incorrectSize", "Input size must be multiple of 36.");
	}
	int n_instances = mxGetNumberOfElements(prhs[0]) / 36;
	double *input = mxGetPr(prhs[0]);
	plhs[0] = mxCreateDoubleMatrix(3,54*n_instances,mxCOMPLEX);
	double* zr = mxGetPr(plhs[0]);
	double* zi = mxGetPi(plhs[0]);
	for(int k = 0; k < n_instances; k++) {
		const VectorXd data = Map<const VectorXd>(input + k*36, 36);
		MatrixXcd sols = solver_1vp_222cl(data);
		Index offset = k*sols.size();
		for (Index i = 0; i < sols.size(); i++) {
			zr[i+offset] = sols(i).real();
			zi[i+offset] = sols(i).imag();
		}
	}
}*/


